# Generated by CodiumAI
from markdown_tools.markdown_file import MarkdownSourceText
from pathlib import Path
import typer


import pytest


class TestAssertTrue:
    # Asserts true when condition is True
    def test_assert_true_condition_true(self):
        # Create a file named "example.md"
        with open("example.md", "w") as f:
            f.write("This is an example file")

        # Initialize the MarkdownSourceText object
        md_source = MarkdownSourceText(Path("example.md"))
        md_source.assert_true(True, "Condition is True")

    # Raises no error when condition is True
    def test_assert_true_no_error_condition_true(self):
        with open("example.md", "w") as f:
            f.write("This is an example markdown file")
        md_source = MarkdownSourceText(Path("example.md"))
        try:
            md_source.assert_true(True, "Condition is True")
        except typer.Exit:
            pytest.fail("Unexpected typer.Exit exception")

    # Error message includes file path when condition is False
    def test_assert_true_error_message_file_path(self):
        open("example.md", "w").close()
        md_source = MarkdownSourceText(Path("example.md"))
        try:
            md_source.assert_true(False, "Condition is False")
        except typer.Exit as e:
            assert (
                str(e)
                == f"ERROR [{md_source.file_path}]  at line 0:\nCondition is False"
            )
        else:
            pytest.fail(
                "Expected typer.Exit exception was not raised"
            )

    # Raises error when condition is False
    def test_assert_true_raises_error_condition_false(self):
        # Create a dummy file "valid_file.md"
        with open("valid_file.md", "w") as f:
            f.write("This is a dummy file")

        md_source = MarkdownSourceText(Path("valid_file.md"))
        with pytest.raises(typer.Exit):
            md_source.assert_true(False, "Condition is False")

        # Remove the dummy file after the test
        Path("valid_file.md").unlink()

    # Raises error when condition is None
    # def test_assert_true_raises_error_condition_none(self):
    #     md_source = MarkdownSourceText(Path("valid_file.md"))
    #     with pytest.raises(typer.Exit):
    #         md_source.assert_true(None, "Condition is None")

    # Raises error when message is None
    def test_assert_true_raises_error_message_none(self, tmp_path):
        example_file = tmp_path / "example.md"
        example_file.write_text("Example Markdown File")
        md_source = MarkdownSourceText(example_file)
        with pytest.raises(typer.Exit):
            md_source.assert_true(False, "Test message")
